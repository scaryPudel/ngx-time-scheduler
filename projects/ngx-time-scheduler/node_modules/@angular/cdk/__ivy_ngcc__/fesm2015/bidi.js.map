{"version":3,"file":"bidi.js","sources":["../../../../../../src/cdk/bidi/dir-document-token.ts","../../../../../../src/cdk/bidi/directionality.ts","../../../../../../src/cdk/bidi/dir.ts","../../../../../../src/cdk/bidi/bidi-module.ts","../../../../../../src/cdk/bidi/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {inject, InjectionToken} from '@angular/core';\n\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nexport const DIR_DOCUMENT = new InjectionToken<Document>('cdk-dir-doc', {\n  providedIn: 'root',\n  factory: DIR_DOCUMENT_FACTORY,\n});\n\n/** @docs-private */\nexport function DIR_DOCUMENT_FACTORY(): Document {\n  return inject(DOCUMENT);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EventEmitter, Inject, Injectable, Optional, OnDestroy} from '@angular/core';\nimport {DIR_DOCUMENT} from './dir-document-token';\n\n\nexport type Direction = 'ltr' | 'rtl';\n\n\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\n@Injectable({providedIn: 'root'})\nexport class Directionality implements OnDestroy {\n  /** The current 'ltr' or 'rtl' value. */\n  readonly value: Direction = 'ltr';\n\n  /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n  readonly change = new EventEmitter<Direction>();\n\n  constructor(@Optional() @Inject(DIR_DOCUMENT) _document?: any) {\n    if (_document) {\n      // TODO: handle 'auto' value -\n      // We still need to account for dir=\"auto\".\n      // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n      // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n      const bodyDir = _document.body ? _document.body.dir : null;\n      const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n      const value = bodyDir || htmlDir;\n      this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n    }\n  }\n\n  ngOnDestroy() {\n    this.change.complete();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  Output,\n  Input,\n  EventEmitter,\n  AfterContentInit,\n  OnDestroy,\n} from '@angular/core';\n\nimport {Direction, Directionality} from './directionality';\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\n@Directive({\n  selector: '[dir]',\n  providers: [{provide: Directionality, useExisting: Dir}],\n  host: {'[attr.dir]': '_rawDir'},\n  exportAs: 'dir',\n})\nexport class Dir implements Directionality, AfterContentInit, OnDestroy {\n  /** Normalized direction that accounts for invalid/unsupported values. */\n  private _dir: Direction = 'ltr';\n\n  /** Whether the `value` has been set to its initial value. */\n  private _isInitialized: boolean = false;\n\n  /** Direction as passed in by the consumer. */\n  _rawDir: string;\n\n  /** Event emitted when the direction changes. */\n  @Output('dirChange') change = new EventEmitter<Direction>();\n\n  /** @docs-private */\n  @Input()\n  get dir(): Direction { return this._dir; }\n  set dir(value: Direction) {\n    const old = this._dir;\n    const normalizedValue = value ? value.toLowerCase() : value;\n\n    this._rawDir = value;\n    this._dir = (normalizedValue === 'ltr' || normalizedValue === 'rtl') ? normalizedValue : 'ltr';\n\n    if (old !== this._dir && this._isInitialized) {\n      this.change.emit(this._dir);\n    }\n  }\n\n  /** Current layout direction of the element. */\n  get value(): Direction { return this.dir; }\n\n  /** Initialize once default value has been set. */\n  ngAfterContentInit() {\n    this._isInitialized = true;\n  }\n\n  ngOnDestroy() {\n    this.change.complete();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {Dir} from './dir';\n\n\n@NgModule({\n  exports: [Dir],\n  declarations: [Dir],\n})\nexport class BidiModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {DIR_DOCUMENT_FACTORY as Éµangular_material_src_cdk_bidi_bidi_a} from './dir-document-token';"]}