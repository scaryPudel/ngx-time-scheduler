{"version":3,"file":"a11y.js","sources":["../../../../../../src/cdk/a11y/aria-describer/aria-reference.ts","../../../../../../src/cdk/a11y/aria-describer/aria-describer.ts","../../../../../../src/cdk/a11y/key-manager/list-key-manager.ts","../../../../../../src/cdk/a11y/key-manager/activedescendant-key-manager.ts","../../../../../../src/cdk/a11y/key-manager/focus-key-manager.ts","../../../../../../src/cdk/a11y/interactivity-checker/interactivity-checker.ts","../../../../../../src/cdk/a11y/focus-trap/focus-trap.ts","../../../../../../src/cdk/a11y/focus-trap/configurable-focus-trap.ts","../../../../../../src/cdk/a11y/focus-trap/polyfill.ts","../../../../../../src/cdk/a11y/focus-trap/event-listener-inert-strategy.ts","../../../../../../src/cdk/a11y/focus-trap/configurable-focus-trap-config.ts","../../../../../../src/cdk/a11y/focus-trap/focus-trap-inert-strategy.ts","../../../../../../src/cdk/a11y/focus-trap/focus-trap-manager.ts","../../../../../../src/cdk/a11y/focus-trap/configurable-focus-trap-factory.ts","../../../../../../src/cdk/a11y/live-announcer/live-announcer-tokens.ts","../../../../../../src/cdk/a11y/live-announcer/live-announcer.ts","../../../../../../src/cdk/a11y/fake-mousedown.ts","../../../../../../src/cdk/a11y/focus-monitor/focus-monitor.ts","../../../../../../src/cdk/a11y/high-contrast-mode/high-contrast-mode-detector.ts","../../../../../../src/cdk/a11y/a11y-module.ts","../../../../../../src/cdk/a11y/index.ts"],"names":["observableOf"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** IDs are delimited by an empty space, as per the spec. */\nconst ID_DELIMITER = ' ';\n\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nexport function addAriaReferencedId(el: Element, attr: string, id: string) {\n  const ids = getAriaReferenceIds(el, attr);\n  if (ids.some(existingId => existingId.trim() == id.trim())) { return; }\n  ids.push(id.trim());\n\n  el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nexport function removeAriaReferencedId(el: Element, attr: string, id: string) {\n  const ids = getAriaReferenceIds(el, attr);\n  const filteredIds = ids.filter(val => val != id.trim());\n\n  if (filteredIds.length) {\n    el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n  } else {\n    el.removeAttribute(attr);\n  }\n}\n\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nexport function getAriaReferenceIds(el: Element, attr: string): string[] {\n  // Get string array of all individual ids (whitespace delimited) in the attribute value\n  return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, OnDestroy} from '@angular/core';\nimport {addAriaReferencedId, getAriaReferenceIds, removeAriaReferencedId} from './aria-reference';\n\n\n/**\n * Interface used to register message elements and keep a count of how many registrations have\n * the same message and the reference to the message element used for the `aria-describedby`.\n */\nexport interface RegisteredMessage {\n  /** The element containing the message. */\n  messageElement: Element;\n\n  /** The number of elements that reference this message element via `aria-describedby`. */\n  referenceCount: number;\n}\n\n/** ID used for the body container where all messages are appended. */\nexport const MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n\n/** ID prefix used for each created message element. */\nexport const CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n\n/** Attribute given to each host element that is described by a message element. */\nexport const CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n\n/** Global map of all registered message elements that have been placed into the document. */\nconst messageRegistry = new Map<string|HTMLElement, RegisteredMessage>();\n\n/** Container for all registered messages. */\nlet messagesContainer: HTMLElement | null = null;\n\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\n@Injectable({providedIn: 'root'})\nexport class AriaDescriber implements OnDestroy {\n  private _document: Document;\n\n  constructor(@Inject(DOCUMENT) _document: any) {\n    this._document = _document;\n  }\n\n  /**\n   * Adds to the host element an aria-describedby reference to a hidden element that contains\n   * the message. If the same message has already been registered, then it will reuse the created\n   * message element.\n   */\n  describe(hostElement: Element, message: string|HTMLElement) {\n    if (!this._canBeDescribed(hostElement, message)) {\n      return;\n    }\n\n    if (typeof message !== 'string') {\n      // We need to ensure that the element has an ID.\n      this._setMessageId(message);\n      messageRegistry.set(message, {messageElement: message, referenceCount: 0});\n    } else if (!messageRegistry.has(message)) {\n      this._createMessageElement(message);\n    }\n\n    if (!this._isElementDescribedByMessage(hostElement, message)) {\n      this._addMessageReference(hostElement, message);\n    }\n  }\n\n  /** Removes the host element's aria-describedby reference to the message element. */\n  removeDescription(hostElement: Element, message: string|HTMLElement) {\n    if (!this._isElementNode(hostElement)) {\n      return;\n    }\n\n    if (this._isElementDescribedByMessage(hostElement, message)) {\n      this._removeMessageReference(hostElement, message);\n    }\n\n    // If the message is a string, it means that it's one that we created for the\n    // consumer so we can remove it safely, otherwise we should leave it in place.\n    if (typeof message === 'string') {\n      const registeredMessage = messageRegistry.get(message);\n      if (registeredMessage && registeredMessage.referenceCount === 0) {\n        this._deleteMessageElement(message);\n      }\n    }\n\n    if (messagesContainer && messagesContainer.childNodes.length === 0) {\n      this._deleteMessagesContainer();\n    }\n  }\n\n  /** Unregisters all created message elements and removes the message container. */\n  ngOnDestroy() {\n    const describedElements =\n        this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}]`);\n\n    for (let i = 0; i < describedElements.length; i++) {\n      this._removeCdkDescribedByReferenceIds(describedElements[i]);\n      describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n\n    if (messagesContainer) {\n      this._deleteMessagesContainer();\n    }\n\n    messageRegistry.clear();\n  }\n\n  /**\n   * Creates a new element in the visually hidden message container element with the message\n   * as its content and adds it to the message registry.\n   */\n  private _createMessageElement(message: string) {\n    const messageElement = this._document.createElement('div');\n    this._setMessageId(messageElement);\n    messageElement.textContent = message;\n\n    this._createMessagesContainer();\n    messagesContainer!.appendChild(messageElement);\n\n    messageRegistry.set(message, {messageElement, referenceCount: 0});\n  }\n\n  /** Assigns a unique ID to an element, if it doesn't have one already. */\n  private _setMessageId(element: HTMLElement) {\n    if (!element.id) {\n      element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${nextId++}`;\n    }\n  }\n\n  /** Deletes the message element from the global messages container. */\n  private _deleteMessageElement(message: string) {\n    const registeredMessage = messageRegistry.get(message);\n    const messageElement = registeredMessage && registeredMessage.messageElement;\n    if (messagesContainer && messageElement) {\n      messagesContainer.removeChild(messageElement);\n    }\n    messageRegistry.delete(message);\n  }\n\n  /** Creates the global container for all aria-describedby messages. */\n  private _createMessagesContainer() {\n    if (!messagesContainer) {\n      const preExistingContainer = this._document.getElementById(MESSAGES_CONTAINER_ID);\n\n      // When going from the server to the client, we may end up in a situation where there's\n      // already a container on the page, but we don't have a reference to it. Clear the\n      // old container so we don't get duplicates. Doing this, instead of emptying the previous\n      // container, should be slightly faster.\n      if (preExistingContainer) {\n        preExistingContainer.parentNode!.removeChild(preExistingContainer);\n      }\n\n      messagesContainer = this._document.createElement('div');\n      messagesContainer.id = MESSAGES_CONTAINER_ID;\n      messagesContainer.setAttribute('aria-hidden', 'true');\n      messagesContainer.style.display = 'none';\n      this._document.body.appendChild(messagesContainer);\n    }\n  }\n\n  /** Deletes the global messages container. */\n  private _deleteMessagesContainer() {\n    if (messagesContainer && messagesContainer.parentNode) {\n      messagesContainer.parentNode.removeChild(messagesContainer);\n      messagesContainer = null;\n    }\n  }\n\n  /** Removes all cdk-describedby messages that are hosted through the element. */\n  private _removeCdkDescribedByReferenceIds(element: Element) {\n    // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n    const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby')\n        .filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n    element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n  }\n\n  /**\n   * Adds a message reference to the element using aria-describedby and increments the registered\n   * message's reference count.\n   */\n  private _addMessageReference(element: Element, message: string|HTMLElement) {\n    const registeredMessage = messageRegistry.get(message)!;\n\n    // Add the aria-describedby reference and set the\n    // describedby_host attribute to mark the element.\n    addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n    element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, '');\n\n    registeredMessage.referenceCount++;\n  }\n\n  /**\n   * Removes a message reference from the element using aria-describedby\n   * and decrements the registered message's reference count.\n   */\n  private _removeMessageReference(element: Element, message: string|HTMLElement) {\n    const registeredMessage = messageRegistry.get(message)!;\n    registeredMessage.referenceCount--;\n\n    removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n    element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n  }\n\n  /** Returns true if the element has been described by the provided message ID. */\n  private _isElementDescribedByMessage(element: Element, message: string|HTMLElement): boolean {\n    const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n    const registeredMessage = messageRegistry.get(message);\n    const messageId = registeredMessage && registeredMessage.messageElement.id;\n\n    return !!messageId && referenceIds.indexOf(messageId) != -1;\n  }\n\n  /** Determines whether a message can be described on a particular element. */\n  private _canBeDescribed(element: Element, message: string|HTMLElement|void): boolean {\n    if (!this._isElementNode(element)) {\n      return false;\n    }\n\n    if (message && typeof message === 'object') {\n      // We'd have to make some assumptions about the description element's text, if the consumer\n      // passed in an element. Assume that if an element is passed in, the consumer has verified\n      // that it can be used as a description.\n      return true;\n    }\n\n    const trimmedMessage = message == null ? '' : `${message}`.trim();\n    const ariaLabel = element.getAttribute('aria-label');\n\n    // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n    // element, because screen readers will end up reading out the same text twice in a row.\n    return trimmedMessage ? (!ariaLabel || ariaLabel.trim() !== trimmedMessage) : false;\n  }\n\n  /** Checks whether a node is an Element node. */\n  private _isElementNode(element: Node): element is Element {\n    return element.nodeType === this._document.ELEMENT_NODE;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {QueryList} from '@angular/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {\n  UP_ARROW,\n  DOWN_ARROW,\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  TAB,\n  A,\n  Z,\n  ZERO,\n  NINE,\n  hasModifierKey,\n} from '@angular/cdk/keycodes';\nimport {debounceTime, filter, map, tap} from 'rxjs/operators';\n\n/** This interface is for items that can be passed to a ListKeyManager. */\nexport interface ListKeyManagerOption {\n  /** Whether the option is disabled. */\n  disabled?: boolean;\n\n  /** Gets the label for this option. */\n  getLabel?(): string;\n}\n\n/** Modifier keys handled by the ListKeyManager. */\nexport type ListKeyManagerModifierKey = 'altKey' | 'ctrlKey' | 'metaKey' | 'shiftKey';\n\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nexport class ListKeyManager<T extends ListKeyManagerOption> {\n  private _activeItemIndex = -1;\n  private _activeItem: T | null = null;\n  private _wrap = false;\n  private _letterKeyStream = new Subject<string>();\n  private _typeaheadSubscription = Subscription.EMPTY;\n  private _vertical = true;\n  private _horizontal: 'ltr' | 'rtl' | null;\n  private _allowedModifierKeys: ListKeyManagerModifierKey[] = [];\n\n  /**\n   * Predicate function that can be used to check whether an item should be skipped\n   * by the key manager. By default, disabled items are skipped.\n   */\n  private _skipPredicateFn = (item: T) => item.disabled;\n\n  // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n  private _pressedLetters: string[] = [];\n\n  constructor(private _items: QueryList<T> | T[]) {\n    // We allow for the items to be an array because, in some cases, the consumer may\n    // not have access to a QueryList of the items they want to manage (e.g. when the\n    // items aren't being collected via `ViewChildren` or `ContentChildren`).\n    if (_items instanceof QueryList) {\n      _items.changes.subscribe((newItems: QueryList<T>) => {\n        if (this._activeItem) {\n          const itemArray = newItems.toArray();\n          const newIndex = itemArray.indexOf(this._activeItem);\n\n          if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n            this._activeItemIndex = newIndex;\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * Stream that emits any time the TAB key is pressed, so components can react\n   * when focus is shifted off of the list.\n   */\n  tabOut: Subject<void> = new Subject<void>();\n\n  /** Stream that emits whenever the active item of the list manager changes. */\n  change = new Subject<number>();\n\n  /**\n   * Sets the predicate function that determines which items should be skipped by the\n   * list key manager.\n   * @param predicate Function that determines whether the given item should be skipped.\n   */\n  skipPredicate(predicate: (item: T) => boolean): this {\n    this._skipPredicateFn = predicate;\n    return this;\n  }\n\n  /**\n   * Configures wrapping mode, which determines whether the active item will wrap to\n   * the other end of list when there are no more items in the given direction.\n   * @param shouldWrap Whether the list should wrap when reaching the end.\n   */\n  withWrap(shouldWrap = true): this {\n    this._wrap = shouldWrap;\n    return this;\n  }\n\n  /**\n   * Configures whether the key manager should be able to move the selection vertically.\n   * @param enabled Whether vertical selection should be enabled.\n   */\n  withVerticalOrientation(enabled: boolean = true): this {\n    this._vertical = enabled;\n    return this;\n  }\n\n  /**\n   * Configures the key manager to move the selection horizontally.\n   * Passing in `null` will disable horizontal movement.\n   * @param direction Direction in which the selection can be moved.\n   */\n  withHorizontalOrientation(direction: 'ltr' | 'rtl' | null): this {\n    this._horizontal = direction;\n    return this;\n  }\n\n  /**\n   * Modifier keys which are allowed to be held down and whose default actions will be prevented\n   * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n   */\n  withAllowedModifierKeys(keys: ListKeyManagerModifierKey[]): this {\n    this._allowedModifierKeys = keys;\n    return this;\n  }\n\n  /**\n   * Turns on typeahead mode which allows users to set the active item by typing.\n   * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n   */\n  withTypeAhead(debounceInterval: number = 200): this {\n    if (this._items.length && this._items.some(item => typeof item.getLabel !== 'function')) {\n      throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n    }\n\n    this._typeaheadSubscription.unsubscribe();\n\n    // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n    // and convert those letters back into a string. Afterwards find the first item that starts\n    // with that string and select it.\n    this._typeaheadSubscription = this._letterKeyStream.pipe(\n      tap(letter => this._pressedLetters.push(letter)),\n      debounceTime(debounceInterval),\n      filter(() => this._pressedLetters.length > 0),\n      map(() => this._pressedLetters.join(''))\n    ).subscribe(inputString => {\n      const items = this._getItemsArray();\n\n      // Start at 1 because we want to start searching at the item immediately\n      // following the current active item.\n      for (let i = 1; i < items.length + 1; i++) {\n        const index = (this._activeItemIndex + i) % items.length;\n        const item = items[index];\n\n        if (!this._skipPredicateFn(item) &&\n            item.getLabel!().toUpperCase().trim().indexOf(inputString) === 0) {\n\n          this.setActiveItem(index);\n          break;\n        }\n      }\n\n      this._pressedLetters = [];\n    });\n\n    return this;\n  }\n\n  /**\n   * Sets the active item to the item at the index specified.\n   * @param index The index of the item to be set as active.\n   */\n  setActiveItem(index: number): void;\n\n  /**\n   * Sets the active item to the specified item.\n   * @param item The item to be set as active.\n   */\n  setActiveItem(item: T): void;\n\n  setActiveItem(item: any): void {\n    const previousIndex = this._activeItemIndex;\n\n    this.updateActiveItem(item);\n\n    if (this._activeItemIndex !== previousIndex) {\n      this.change.next(this._activeItemIndex);\n    }\n  }\n\n  /**\n   * Sets the active item depending on the key event passed in.\n   * @param event Keyboard event to be used for determining which element should be active.\n   */\n  onKeydown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const modifiers: ListKeyManagerModifierKey[] = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n    const isModifierAllowed = modifiers.every(modifier => {\n      return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n    });\n\n    switch (keyCode) {\n      case TAB:\n        this.tabOut.next();\n        return;\n\n      case DOWN_ARROW:\n        if (this._vertical && isModifierAllowed) {\n          this.setNextItemActive();\n          break;\n        } else {\n          return;\n        }\n\n      case UP_ARROW:\n        if (this._vertical && isModifierAllowed) {\n          this.setPreviousItemActive();\n          break;\n        } else {\n          return;\n        }\n\n      case RIGHT_ARROW:\n        if (this._horizontal && isModifierAllowed) {\n          this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n          break;\n        } else {\n          return;\n        }\n\n      case LEFT_ARROW:\n        if (this._horizontal && isModifierAllowed) {\n          this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n          break;\n        } else {\n          return;\n        }\n\n      default:\n      if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n          // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n          // otherwise fall back to resolving alphanumeric characters via the keyCode.\n          if (event.key && event.key.length === 1) {\n            this._letterKeyStream.next(event.key.toLocaleUpperCase());\n          } else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n            this._letterKeyStream.next(String.fromCharCode(keyCode));\n          }\n        }\n\n        // Note that we return here, in order to avoid preventing\n        // the default action of non-navigational keys.\n        return;\n    }\n\n    this._pressedLetters = [];\n    event.preventDefault();\n  }\n\n  /** Index of the currently active item. */\n  get activeItemIndex(): number | null {\n    return this._activeItemIndex;\n  }\n\n  /** The active item. */\n  get activeItem(): T | null {\n    return this._activeItem;\n  }\n\n  /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n  isTyping(): boolean {\n    return this._pressedLetters.length > 0;\n  }\n\n  /** Sets the active item to the first enabled item in the list. */\n  setFirstItemActive(): void {\n    this._setActiveItemByIndex(0, 1);\n  }\n\n  /** Sets the active item to the last enabled item in the list. */\n  setLastItemActive(): void {\n    this._setActiveItemByIndex(this._items.length - 1, -1);\n  }\n\n  /** Sets the active item to the next enabled item in the list. */\n  setNextItemActive(): void {\n    this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n  }\n\n  /** Sets the active item to a previous enabled item in the list. */\n  setPreviousItemActive(): void {\n    this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive()\n                                            : this._setActiveItemByDelta(-1);\n  }\n\n  /**\n   * Allows setting the active without any other effects.\n   * @param index Index of the item to be set as active.\n   */\n  updateActiveItem(index: number): void;\n\n  /**\n   * Allows setting the active item without any other effects.\n   * @param item Item to be set as active.\n   */\n  updateActiveItem(item: T): void;\n\n  updateActiveItem(item: any): void {\n    const itemArray = this._getItemsArray();\n    const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n    const activeItem = itemArray[index];\n\n    // Explicitly check for `null` and `undefined` because other falsy values are valid.\n    this._activeItem = activeItem == null ? null : activeItem;\n    this._activeItemIndex = index;\n  }\n\n  /**\n   * This method sets the active item, given a list of items and the delta between the\n   * currently active item and the new active item. It will calculate differently\n   * depending on whether wrap mode is turned on.\n   */\n  private _setActiveItemByDelta(delta: -1 | 1): void {\n    this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n  }\n\n  /**\n   * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n   * down the list until it finds an item that is not disabled, and it will wrap if it\n   * encounters either end of the list.\n   */\n  private _setActiveInWrapMode(delta: -1 | 1): void {\n    const items = this._getItemsArray();\n\n    for (let i = 1; i <= items.length; i++) {\n      const index = (this._activeItemIndex + (delta * i) + items.length) % items.length;\n      const item = items[index];\n\n      if (!this._skipPredicateFn(item)) {\n        this.setActiveItem(index);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Sets the active item properly given the default mode. In other words, it will\n   * continue to move down the list until it finds an item that is not disabled. If\n   * it encounters either end of the list, it will stop and not wrap.\n   */\n  private _setActiveInDefaultMode(delta: -1 | 1): void {\n    this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n  }\n\n  /**\n   * Sets the active item to the first enabled item starting at the index specified. If the\n   * item is disabled, it will move in the fallbackDelta direction until it either\n   * finds an enabled item or encounters the end of the list.\n   */\n  private _setActiveItemByIndex(index: number, fallbackDelta: -1 | 1): void {\n    const items = this._getItemsArray();\n\n    if (!items[index]) {\n      return;\n    }\n\n    while (this._skipPredicateFn(items[index])) {\n      index += fallbackDelta;\n\n      if (!items[index]) {\n        return;\n      }\n    }\n\n    this.setActiveItem(index);\n  }\n\n  /** Returns the items as an array. */\n  private _getItemsArray(): T[] {\n    return this._items instanceof QueryList ? this._items.toArray() : this._items;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ListKeyManager, ListKeyManagerOption} from './list-key-manager';\n\n/**\n * This is the interface for highlightable items (used by the ActiveDescendantKeyManager).\n * Each item must know how to style itself as active or inactive and whether or not it is\n * currently disabled.\n */\nexport interface Highlightable extends ListKeyManagerOption {\n  /** Applies the styles for an active item to this item. */\n  setActiveStyles(): void;\n\n  /** Applies the styles for an inactive item to this item. */\n  setInactiveStyles(): void;\n}\n\nexport class ActiveDescendantKeyManager<T> extends ListKeyManager<Highlightable & T> {\n\n  /**\n   * Sets the active item to the item at the specified index and adds the\n   * active styles to the newly active item. Also removes active styles\n   * from the previously active item.\n   * @param index Index of the item to be set as active.\n   */\n  setActiveItem(index: number): void;\n\n  /**\n   * Sets the active item to the item to the specified one and adds the\n   * active styles to the it. Also removes active styles from the\n   * previously active item.\n   * @param item Item to be set as active.\n   */\n  setActiveItem(item: T): void;\n\n  setActiveItem(index: any): void {\n    if (this.activeItem) {\n      this.activeItem.setInactiveStyles();\n    }\n    super.setActiveItem(index);\n    if (this.activeItem) {\n      this.activeItem.setActiveStyles();\n    }\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ListKeyManager, ListKeyManagerOption} from './list-key-manager';\nimport {FocusOrigin} from '../focus-monitor/focus-monitor';\n\n/**\n * This is the interface for focusable items (used by the FocusKeyManager).\n * Each item must know how to focus itself, whether or not it is currently disabled\n * and be able to supply its label.\n */\nexport interface FocusableOption extends ListKeyManagerOption {\n  /** Focuses the `FocusableOption`. */\n  focus(origin?: FocusOrigin): void;\n}\n\nexport class FocusKeyManager<T> extends ListKeyManager<FocusableOption & T> {\n  private _origin: FocusOrigin = 'program';\n\n  /**\n   * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n   * @param origin Focus origin to be used when focusing items.\n   */\n  setFocusOrigin(origin: FocusOrigin): this {\n    this._origin = origin;\n    return this;\n  }\n\n  /**\n   * Sets the active item to the item at the specified\n   * index and focuses the newly active item.\n   * @param index Index of the item to be set as active.\n   */\n  setActiveItem(index: number): void;\n\n  /**\n   * Sets the active item to the item that is specified and focuses it.\n   * @param item Item to be set as active.\n   */\n  setActiveItem(item: T): void;\n\n  setActiveItem(item: any): void {\n    super.setActiveItem(item);\n\n    if (this.activeItem) {\n      this.activeItem.focus(this._origin);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {Injectable} from '@angular/core';\n\n\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\n@Injectable({providedIn: 'root'})\nexport class InteractivityChecker {\n\n  constructor(private _platform: Platform) {}\n\n  /**\n   * Gets whether an element is disabled.\n   *\n   * @param element Element to be checked.\n   * @returns Whether the element is disabled.\n   */\n  isDisabled(element: HTMLElement): boolean {\n    // This does not capture some cases, such as a non-form control with a disabled attribute or\n    // a form control inside of a disabled form, but should capture the most common cases.\n    return element.hasAttribute('disabled');\n  }\n\n  /**\n   * Gets whether an element is visible for the purposes of interactivity.\n   *\n   * This will capture states like `display: none` and `visibility: hidden`, but not things like\n   * being clipped by an `overflow: hidden` parent or being outside the viewport.\n   *\n   * @returns Whether the element is visible.\n   */\n  isVisible(element: HTMLElement): boolean {\n    return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n  }\n\n  /**\n   * Gets whether an element can be reached via Tab key.\n   * Assumes that the element has already been checked with isFocusable.\n   *\n   * @param element Element to be checked.\n   * @returns Whether the element is tabbable.\n   */\n  isTabbable(element: HTMLElement): boolean {\n    // Nothing is tabbable on the server ð\n    if (!this._platform.isBrowser) {\n      return false;\n    }\n\n    const frameElement = getFrameElement(getWindow(element));\n\n    if (frameElement) {\n      const frameType = frameElement && frameElement.nodeName.toLowerCase();\n\n      // Frame elements inherit their tabindex onto all child elements.\n      if (getTabIndexValue(frameElement) === -1) {\n        return false;\n      }\n\n      // Webkit and Blink consider anything inside of an <object> element as non-tabbable.\n      if ((this._platform.BLINK || this._platform.WEBKIT) && frameType === 'object') {\n        return false;\n      }\n\n      // Webkit and Blink disable tabbing to an element inside of an invisible frame.\n      if ((this._platform.BLINK || this._platform.WEBKIT) && !this.isVisible(frameElement)) {\n        return false;\n      }\n\n    }\n\n    let nodeName = element.nodeName.toLowerCase();\n    let tabIndexValue = getTabIndexValue(element);\n\n    if (element.hasAttribute('contenteditable')) {\n      return tabIndexValue !== -1;\n    }\n\n    if (nodeName === 'iframe') {\n      // The frames may be tabbable depending on content, but it's not possibly to reliably\n      // investigate the content of the frames.\n      return false;\n    }\n\n    if (nodeName === 'audio') {\n      if (!element.hasAttribute('controls')) {\n        // By default an <audio> element without the controls enabled is not tabbable.\n        return false;\n      } else if (this._platform.BLINK) {\n        // In Blink <audio controls> elements are always tabbable.\n        return true;\n      }\n    }\n\n    if (nodeName === 'video') {\n      if (!element.hasAttribute('controls') && this._platform.TRIDENT) {\n        // In Trident a <video> element without the controls enabled is not tabbable.\n        return false;\n      } else if (this._platform.BLINK || this._platform.FIREFOX) {\n        // In Chrome and Firefox <video controls> elements are always tabbable.\n        return true;\n      }\n    }\n\n    if (nodeName === 'object' && (this._platform.BLINK || this._platform.WEBKIT)) {\n      // In all Blink and WebKit based browsers <object> elements are never tabbable.\n      return false;\n    }\n\n    // In iOS the browser only considers some specific elements as tabbable.\n    if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n      return false;\n    }\n\n    return element.tabIndex >= 0;\n  }\n\n  /**\n   * Gets whether an element can be focused by the user.\n   *\n   * @param element Element to be checked.\n   * @returns Whether the element is focusable.\n   */\n  isFocusable(element: HTMLElement): boolean {\n    // Perform checks in order of left to most expensive.\n    // Again, naive approach that does not capture many edge cases and browser quirks.\n    return isPotentiallyFocusable(element) && !this.isDisabled(element) && this.isVisible(element);\n  }\n\n}\n\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window: Window) {\n  try {\n    return window.frameElement as HTMLElement;\n  } catch {\n    return null;\n  }\n}\n\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element: HTMLElement): boolean {\n  // Use logic from jQuery to check for an invisible element.\n  // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n  return !!(element.offsetWidth || element.offsetHeight ||\n      (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n\n/** Gets whether an element's  */\nfunction isNativeFormElement(element: Node) {\n  let nodeName = element.nodeName.toLowerCase();\n  return nodeName === 'input' ||\n      nodeName === 'select' ||\n      nodeName === 'button' ||\n      nodeName === 'textarea';\n}\n\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element: HTMLElement): boolean {\n  return isInputElement(element) && element.type == 'hidden';\n}\n\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element: HTMLElement): boolean {\n  return isAnchorElement(element) && element.hasAttribute('href');\n}\n\n/** Gets whether an element is an input element. */\nfunction isInputElement(element: HTMLElement): element is HTMLInputElement {\n  return element.nodeName.toLowerCase() == 'input';\n}\n\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element: HTMLElement): element is HTMLAnchorElement {\n  return element.nodeName.toLowerCase() == 'a';\n}\n\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element: HTMLElement): boolean {\n  if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n    return false;\n  }\n\n  let tabIndex = element.getAttribute('tabindex');\n\n  // IE11 parses tabindex=\"\" as the value \"-32768\"\n  if (tabIndex == '-32768') {\n    return false;\n  }\n\n  return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element: HTMLElement): number | null {\n  if (!hasValidTabIndex(element)) {\n    return null;\n  }\n\n  // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n  const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n\n  return isNaN(tabIndex) ? -1 : tabIndex;\n}\n\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element: HTMLElement): boolean {\n  let nodeName = element.nodeName.toLowerCase();\n  let inputType = nodeName === 'input' && (element as HTMLInputElement).type;\n\n  return inputType === 'text'\n      || inputType === 'password'\n      || nodeName === 'select'\n      || nodeName === 'textarea';\n}\n\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element: HTMLElement): boolean {\n  // Inputs are potentially focusable *unless* they're type=\"hidden\".\n  if (isHiddenInput(element)) {\n    return false;\n  }\n\n  return isNativeFormElement(element) ||\n      isAnchorWithHref(element) ||\n      element.hasAttribute('contenteditable') ||\n      hasValidTabIndex(element);\n}\n\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node: HTMLElement): Window {\n  // ownerDocument is null if `node` itself *is* a document.\n  return node.ownerDocument && node.ownerDocument.defaultView || window;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  Inject,\n  Injectable,\n  Input,\n  NgZone,\n  OnDestroy,\n  DoCheck,\n  isDevMode,\n} from '@angular/core';\nimport {take} from 'rxjs/operators';\nimport {InteractivityChecker} from '../interactivity-checker/interactivity-checker';\n\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause to two to misalign.\n *\n * @deprecated Use `ConfigurableFocusTrap` instead.\n * @breaking-change for 11.0.0 Remove this class.\n */\nexport class FocusTrap {\n  private _startAnchor: HTMLElement | null;\n  private _endAnchor: HTMLElement | null;\n  private _hasAttached = false;\n\n  // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n  protected startAnchorListener = () => this.focusLastTabbableElement();\n  protected endAnchorListener = () => this.focusFirstTabbableElement();\n\n  /** Whether the focus trap is active. */\n  get enabled(): boolean { return this._enabled; }\n  set enabled(value: boolean) {\n    this._enabled = value;\n\n    if (this._startAnchor && this._endAnchor) {\n      this._toggleAnchorTabIndex(value, this._startAnchor);\n      this._toggleAnchorTabIndex(value, this._endAnchor);\n    }\n  }\n  protected _enabled: boolean = true;\n\n  constructor(\n    readonly _element: HTMLElement,\n    private _checker: InteractivityChecker,\n    readonly _ngZone: NgZone,\n    readonly _document: Document,\n    deferAnchors = false) {\n\n    if (!deferAnchors) {\n      this.attachAnchors();\n    }\n  }\n\n  /** Destroys the focus trap by cleaning up the anchors. */\n  destroy() {\n    const startAnchor = this._startAnchor;\n    const endAnchor = this._endAnchor;\n\n    if (startAnchor) {\n      startAnchor.removeEventListener('focus', this.startAnchorListener);\n\n      if (startAnchor.parentNode) {\n        startAnchor.parentNode.removeChild(startAnchor);\n      }\n    }\n\n    if (endAnchor) {\n      endAnchor.removeEventListener('focus', this.endAnchorListener);\n\n      if (endAnchor.parentNode) {\n        endAnchor.parentNode.removeChild(endAnchor);\n      }\n    }\n\n    this._startAnchor = this._endAnchor = null;\n  }\n\n  /**\n   * Inserts the anchors into the DOM. This is usually done automatically\n   * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n   * @returns Whether the focus trap managed to attach successfuly. This may not be the case\n   * if the target element isn't currently in the DOM.\n   */\n  attachAnchors(): boolean {\n    // If we're not on the browser, there can be no focus to trap.\n    if (this._hasAttached) {\n      return true;\n    }\n\n    this._ngZone.runOutsideAngular(() => {\n      if (!this._startAnchor) {\n        this._startAnchor = this._createAnchor();\n        this._startAnchor!.addEventListener('focus', this.startAnchorListener);\n      }\n\n      if (!this._endAnchor) {\n        this._endAnchor = this._createAnchor();\n        this._endAnchor!.addEventListener('focus', this.endAnchorListener);\n      }\n    });\n\n    if (this._element.parentNode) {\n      this._element.parentNode.insertBefore(this._startAnchor!, this._element);\n      this._element.parentNode.insertBefore(this._endAnchor!, this._element.nextSibling);\n      this._hasAttached = true;\n    }\n\n    return this._hasAttached;\n  }\n\n  /**\n   * Waits for the zone to stabilize, then either focuses the first element that the\n   * user specified, or the first tabbable element.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfuly.\n   */\n  focusInitialElementWhenReady(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      this._executeOnStable(() => resolve(this.focusInitialElement()));\n    });\n  }\n\n  /**\n   * Waits for the zone to stabilize, then focuses\n   * the first tabbable element within the focus trap region.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfuly.\n   */\n  focusFirstTabbableElementWhenReady(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      this._executeOnStable(() => resolve(this.focusFirstTabbableElement()));\n    });\n  }\n\n  /**\n   * Waits for the zone to stabilize, then focuses\n   * the last tabbable element within the focus trap region.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfuly.\n   */\n  focusLastTabbableElementWhenReady(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      this._executeOnStable(() => resolve(this.focusLastTabbableElement()));\n    });\n  }\n\n  /**\n   * Get the specified boundary element of the trapped region.\n   * @param bound The boundary to get (start or end of trapped region).\n   * @returns The boundary element.\n   */\n  private _getRegionBoundary(bound: 'start' | 'end'): HTMLElement | null {\n    // Contains the deprecated version of selector, for temporary backwards comparability.\n    let markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` +\n                                                 `[cdkFocusRegion${bound}], ` +\n                                                 `[cdk-focus-${bound}]`) as NodeListOf<HTMLElement>;\n\n    for (let i = 0; i < markers.length; i++) {\n      // @breaking-change 8.0.0\n      if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n        console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                     `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                     `attribute will be removed in 8.0.0.`, markers[i]);\n      } else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n        console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                     `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                     `will be removed in 8.0.0.`, markers[i]);\n      }\n    }\n\n    if (bound == 'start') {\n      return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n    }\n    return markers.length ?\n        markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n  }\n\n  /**\n   * Focuses the element that should be focused when the focus trap is initialized.\n   * @returns Whether focus was moved successfuly.\n   */\n  focusInitialElement(): boolean {\n    // Contains the deprecated version of selector, for temporary backwards comparability.\n    const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` +\n                                                          `[cdkFocusInitial]`) as HTMLElement;\n\n    if (redirectToElement) {\n      // @breaking-change 8.0.0\n      if (redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n        console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n      }\n\n      // Warn the consumer if the element they've pointed to\n      // isn't focusable, when not in production mode.\n      if (isDevMode() && !this._checker.isFocusable(redirectToElement)) {\n        console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n      }\n\n      redirectToElement.focus();\n      return true;\n    }\n\n    return this.focusFirstTabbableElement();\n  }\n\n  /**\n   * Focuses the first tabbable element within the focus trap region.\n   * @returns Whether focus was moved successfuly.\n   */\n  focusFirstTabbableElement(): boolean {\n    const redirectToElement = this._getRegionBoundary('start');\n\n    if (redirectToElement) {\n      redirectToElement.focus();\n    }\n\n    return !!redirectToElement;\n  }\n\n  /**\n   * Focuses the last tabbable element within the focus trap region.\n   * @returns Whether focus was moved successfuly.\n   */\n  focusLastTabbableElement(): boolean {\n    const redirectToElement = this._getRegionBoundary('end');\n\n    if (redirectToElement) {\n      redirectToElement.focus();\n    }\n\n    return !!redirectToElement;\n  }\n\n  /**\n   * Checks whether the focus trap has successfuly been attached.\n   */\n  hasAttached(): boolean {\n    return this._hasAttached;\n  }\n\n  /** Get the first tabbable element from a DOM subtree (inclusive). */\n  private _getFirstTabbableElement(root: HTMLElement): HTMLElement | null {\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n      return root;\n    }\n\n    // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\n    // back to `childNodes` which includes text nodes, comments etc.\n    let children = root.children || root.childNodes;\n\n    for (let i = 0; i < children.length; i++) {\n      let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n        this._getFirstTabbableElement(children[i] as HTMLElement) :\n        null;\n\n      if (tabbableChild) {\n        return tabbableChild;\n      }\n    }\n\n    return null;\n  }\n\n  /** Get the last tabbable element from a DOM subtree (inclusive). */\n  private _getLastTabbableElement(root: HTMLElement): HTMLElement | null {\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n      return root;\n    }\n\n    // Iterate in reverse DOM order.\n    let children = root.children || root.childNodes;\n\n    for (let i = children.length - 1; i >= 0; i--) {\n      let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n        this._getLastTabbableElement(children[i] as HTMLElement) :\n        null;\n\n      if (tabbableChild) {\n        return tabbableChild;\n      }\n    }\n\n    return null;\n  }\n\n  /** Creates an anchor element. */\n  private _createAnchor(): HTMLElement {\n    const anchor = this._document.createElement('div');\n    this._toggleAnchorTabIndex(this._enabled, anchor);\n    anchor.classList.add('cdk-visually-hidden');\n    anchor.classList.add('cdk-focus-trap-anchor');\n    anchor.setAttribute('aria-hidden', 'true');\n    return anchor;\n  }\n\n  /**\n   * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n   * @param isEnabled Whether the focus trap is enabled.\n   * @param anchor Anchor on which to toggle the tabindex.\n   */\n  private _toggleAnchorTabIndex(isEnabled: boolean, anchor: HTMLElement) {\n    // Remove the tabindex completely, rather than setting it to -1, because if the\n    // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n    isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n  }\n\n  /**\n   * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n   * @param enabled: Whether the anchors should trap Tab.\n   */\n  protected toggleAnchors(enabled: boolean) {\n    if (this._startAnchor && this._endAnchor) {\n      this._toggleAnchorTabIndex(enabled, this._startAnchor);\n      this._toggleAnchorTabIndex(enabled, this._endAnchor);\n    }\n  }\n\n  /** Executes a function when the zone is stable. */\n  private _executeOnStable(fn: () => any): void {\n    if (this._ngZone.isStable) {\n      fn();\n    } else {\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(fn);\n    }\n  }\n}\n\n/**\n * Factory that allows easy instantiation of focus traps.\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\n * @breaking-change for 11.0.0 Remove this class.\n */\n@Injectable({providedIn: 'root'})\nexport class FocusTrapFactory {\n  private _document: Document;\n\n  constructor(\n      private _checker: InteractivityChecker,\n      private _ngZone: NgZone,\n      @Inject(DOCUMENT) _document: any) {\n\n    this._document = _document;\n  }\n\n  /**\n   * Creates a focus-trapped region around the given element.\n   * @param element The element around which focus will be trapped.\n   * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n   *     manually by the user.\n   * @returns The created focus trap instance.\n   */\n  create(element: HTMLElement, deferCaptureElements: boolean = false): FocusTrap {\n    return new FocusTrap(\n        element, this._checker, this._ngZone, this._document, deferCaptureElements);\n  }\n}\n\n/** Directive for trapping focus within a region. */\n@Directive({\n  selector: '[cdkTrapFocus]',\n  exportAs: 'cdkTrapFocus',\n})\nexport class CdkTrapFocus implements OnDestroy, AfterContentInit, DoCheck {\n  private _document: Document;\n\n  /** Underlying FocusTrap instance. */\n  focusTrap: FocusTrap;\n\n  /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n  private _previouslyFocusedElement: HTMLElement | null = null;\n\n  /** Whether the focus trap is active. */\n  @Input('cdkTrapFocus')\n  get enabled(): boolean { return this.focusTrap.enabled; }\n  set enabled(value: boolean) { this.focusTrap.enabled = coerceBooleanProperty(value); }\n\n  /**\n   * Whether the directive should automatially move focus into the trapped region upon\n   * initialization and return focus to the previous activeElement upon destruction.\n   */\n  @Input('cdkTrapFocusAutoCapture')\n  get autoCapture(): boolean { return this._autoCapture; }\n  set autoCapture(value: boolean) { this._autoCapture = coerceBooleanProperty(value); }\n  private _autoCapture: boolean;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>,\n      private _focusTrapFactory: FocusTrapFactory,\n      @Inject(DOCUMENT) _document: any) {\n\n    this._document = _document;\n    this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n  }\n\n  ngOnDestroy() {\n    this.focusTrap.destroy();\n\n    // If we stored a previously focused element when using autoCapture, return focus to that\n    // element now that the trapped region is being destroyed.\n    if (this._previouslyFocusedElement) {\n      this._previouslyFocusedElement.focus();\n      this._previouslyFocusedElement = null;\n    }\n  }\n\n  ngAfterContentInit() {\n    this.focusTrap.attachAnchors();\n\n    if (this.autoCapture) {\n      this._previouslyFocusedElement = this._document.activeElement as HTMLElement;\n      this.focusTrap.focusInitialElementWhenReady();\n    }\n  }\n\n  ngDoCheck() {\n    if (!this.focusTrap.hasAttached()) {\n      this.focusTrap.attachAnchors();\n    }\n  }\n\n  static ngAcceptInputType_enabled: BooleanInput;\n  static ngAcceptInputType_autoCapture: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgZone} from '@angular/core';\nimport {InteractivityChecker} from '../interactivity-checker/interactivity-checker';\nimport {FocusTrap} from './focus-trap';\nimport {FocusTrapManager, ManagedFocusTrap} from './focus-trap-manager';\nimport {FocusTrapInertStrategy} from './focus-trap-inert-strategy';\nimport {ConfigurableFocusTrapConfig} from './configurable-focus-trap-config';\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nexport class ConfigurableFocusTrap extends FocusTrap implements ManagedFocusTrap {\n  /** Whether the FocusTrap is enabled. */\n  get enabled(): boolean { return this._enabled; }\n  set enabled(value: boolean) {\n    this._enabled = value;\n    if (this._enabled) {\n      this._focusTrapManager.register(this);\n    } else {\n      this._focusTrapManager.deregister(this);\n    }\n  }\n\n  constructor(\n    _element: HTMLElement,\n    _checker: InteractivityChecker,\n    _ngZone: NgZone,\n    _document: Document,\n    private _focusTrapManager: FocusTrapManager,\n    private _inertStrategy: FocusTrapInertStrategy,\n    config: ConfigurableFocusTrapConfig) {\n    super(_element, _checker, _ngZone, _document, config.defer);\n    this._focusTrapManager.register(this);\n  }\n\n  /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n  destroy() {\n    this._focusTrapManager.deregister(this);\n    super.destroy();\n  }\n\n  /** @docs-private Implemented as part of ManagedFocusTrap. */\n  _enable() {\n    this._inertStrategy.preventFocus(this);\n    this.toggleAnchors(true);\n  }\n\n  /** @docs-private Implemented as part of ManagedFocusTrap. */\n  _disable() {\n    this._inertStrategy.allowFocus(this);\n    this.toggleAnchors(false);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** IE 11 compatible closest implementation that is able to start from non-Element Nodes. */\nexport function closest(element: EventTarget|Element|null|undefined, selector: string):\n    Element|null {\n  if (!(element instanceof Node)) { return null; }\n\n  let curr: Node|null = element;\n  while (curr != null && !(curr instanceof Element)) {\n    curr = curr.parentNode;\n  }\n\n  return curr && (hasNativeClosest ?\n      curr.closest(selector) : polyfillClosest(curr, selector)) as Element|null;\n}\n\n/** Polyfill for browsers without Element.closest. */\nfunction polyfillClosest(element: Element, selector: string): Element|null {\n  let curr: Node|null = element;\n  while (curr != null && !(curr instanceof Element && matches(curr, selector))) {\n    curr = curr.parentNode;\n  }\n\n  return (curr || null) as Element|null;\n}\n\nconst hasNativeClosest = typeof Element != 'undefined' && !!Element.prototype.closest;\n\n/** IE 11 compatible matches implementation. */\nfunction matches(element: Element, selector: string): boolean {\n  return element.matches ?\n      element.matches(selector) :\n      (element as any)['msMatchesSelector'](selector);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusTrapInertStrategy} from './focus-trap-inert-strategy';\nimport {ConfigurableFocusTrap} from './configurable-focus-trap';\nimport {closest} from './polyfill';\n\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nexport class EventListenerFocusTrapInertStrategy implements FocusTrapInertStrategy {\n  /** Focus event handler. */\n  private _listener: ((e: FocusEvent) => void) | null = null;\n\n  /** Adds a document event listener that keeps focus inside the FocusTrap. */\n  preventFocus(focusTrap: ConfigurableFocusTrap): void {\n    // Ensure there's only one listener per document\n    if (this._listener) {\n      focusTrap._document.removeEventListener('focus', this._listener!, true);\n    }\n\n    this._listener = (e: FocusEvent) => this._trapFocus(focusTrap, e);\n    focusTrap._ngZone.runOutsideAngular(() => {\n      focusTrap._document.addEventListener('focus', this._listener!, true);\n    });\n  }\n\n  /** Removes the event listener added in preventFocus. */\n  allowFocus(focusTrap: ConfigurableFocusTrap): void {\n    if (!this._listener) {\n      return;\n    }\n    focusTrap._document.removeEventListener('focus', this._listener!, true);\n    this._listener = null;\n  }\n\n  /**\n   * Refocuses the first element in the FocusTrap if the focus event target was outside\n   * the FocusTrap.\n   *\n   * This is an event listener callback. The event listener is added in runOutsideAngular,\n   * so all this code runs outside Angular as well.\n   */\n  private _trapFocus(focusTrap: ConfigurableFocusTrap, event: FocusEvent) {\n    const target = event.target as HTMLElement;\n    const focusTrapRoot = focusTrap._element;\n\n    // Don't refocus if target was in an overlay, because the overlay might be associated\n    // with an element inside the FocusTrap, ex. mat-select.\n    if (!focusTrapRoot.contains(target) && closest(target, 'div.cdk-overlay-pane') === null) {\n        // Some legacy FocusTrap usages have logic that focuses some element on the page\n        // just before FocusTrap is destroyed. For backwards compatibility, wait\n        // to be sure FocusTrap is still enabled before refocusing.\n        setTimeout(() => {\n          // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n          if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n            focusTrap.focusFirstTabbableElement();\n          }\n        });\n      }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Configuration for creating a ConfigurableFocusTrap.\n */\nexport class ConfigurableFocusTrapConfig {\n  /**\n   * Whether to defer the creation of FocusTrap elements to be\n   * done manually by the user. Default is to create them\n   * automatically.\n   */\n  defer: boolean = false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  InjectionToken,\n} from '@angular/core';\nimport {FocusTrap} from './focus-trap';\n\n/** The injection token used to specify the inert strategy. */\nexport const FOCUS_TRAP_INERT_STRATEGY =\n  new InjectionToken<FocusTrapInertStrategy>('FOCUS_TRAP_INERT_STRATEGY');\n\n/**\n * A strategy that dictates how FocusTrap should prevent elements\n * outside of the FocusTrap from being focused.\n */\nexport interface FocusTrapInertStrategy {\n  /** Makes all elements outside focusTrap unfocusable. */\n  preventFocus(focusTrap: FocusTrap): void;\n  /** Reverts elements made unfocusable by preventFocus to their previous state. */\n  allowFocus(focusTrap: FocusTrap): void;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\n\n/**\n * A FocusTrap managed by FocusTrapManager.\n * Implemented by ConfigurableFocusTrap to avoid circular dependency.\n */\nexport interface ManagedFocusTrap {\n  _enable(): void;\n  _disable(): void;\n  focusInitialElementWhenReady(): Promise<boolean>;\n}\n\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\n@Injectable({providedIn: 'root'})\nexport class FocusTrapManager {\n  // A stack of the FocusTraps on the page. Only the FocusTrap at the\n  // top of the stack is active.\n  private _focusTrapStack: ManagedFocusTrap[] = [];\n\n  /**\n   * Disables the FocusTrap at the top of the stack, and then pushes\n   * the new FocusTrap onto the stack.\n   */\n  register(focusTrap: ManagedFocusTrap): void {\n    // Dedupe focusTraps that register multiple times.\n    this._focusTrapStack = this._focusTrapStack.filter((ft) => ft !== focusTrap);\n\n    let stack = this._focusTrapStack;\n\n    if (stack.length) {\n      stack[stack.length - 1]._disable();\n    }\n\n    stack.push(focusTrap);\n    focusTrap._enable();\n  }\n\n  /**\n   * Removes the FocusTrap from the stack, and activates the\n   * FocusTrap that is the new top of the stack.\n   */\n  deregister(focusTrap: ManagedFocusTrap): void {\n    focusTrap._disable();\n\n    const stack = this._focusTrapStack;\n\n    const i = stack.indexOf(focusTrap);\n    if (i !== -1) {\n      stack.splice(i, 1);\n      if (stack.length) {\n        stack[stack.length - 1]._enable();\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  Optional,\n  NgZone,\n} from '@angular/core';\nimport {InteractivityChecker} from '../interactivity-checker/interactivity-checker';\nimport {ConfigurableFocusTrap} from './configurable-focus-trap';\nimport {ConfigurableFocusTrapConfig} from './configurable-focus-trap-config';\nimport {FOCUS_TRAP_INERT_STRATEGY, FocusTrapInertStrategy} from './focus-trap-inert-strategy';\nimport {EventListenerFocusTrapInertStrategy} from './event-listener-inert-strategy';\nimport {FocusTrapManager} from './focus-trap-manager';\n\n/** Factory that allows easy instantiation of configurable focus traps. */\n@Injectable({providedIn: 'root'})\nexport class ConfigurableFocusTrapFactory {\n  private _document: Document;\n  private _inertStrategy: FocusTrapInertStrategy;\n\n  constructor(\n      private _checker: InteractivityChecker,\n      private _ngZone: NgZone,\n      private _focusTrapManager: FocusTrapManager,\n      @Inject(DOCUMENT) _document: any,\n      @Optional() @Inject(FOCUS_TRAP_INERT_STRATEGY) _inertStrategy?: FocusTrapInertStrategy) {\n\n    this._document = _document;\n    // TODO split up the strategies into different modules, similar to DateAdapter.\n    this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n  }\n\n  /**\n   * Creates a focus-trapped region around the given element.\n   * @param element The element around which focus will be trapped.\n   * @param config The focus trap configuration.\n   * @returns The created focus trap instance.\n   */\n  create(element: HTMLElement, config?: ConfigurableFocusTrapConfig): ConfigurableFocusTrap;\n\n  /**\n   * @deprecated Pass a config object instead of the `deferCaptureElements` flag.\n   * @breaking-change 11.0.0\n   */\n  create(element: HTMLElement, deferCaptureElements: boolean): ConfigurableFocusTrap;\n\n  create(element: HTMLElement, config: ConfigurableFocusTrapConfig | boolean =\n    new ConfigurableFocusTrapConfig()): ConfigurableFocusTrap {\n    let configObject: ConfigurableFocusTrapConfig;\n    if (typeof config === 'boolean') {\n      configObject = new ConfigurableFocusTrapConfig();\n      configObject.defer = config;\n    } else {\n      configObject = config;\n    }\n    return new ConfigurableFocusTrap(\n        element, this._checker, this._ngZone, this._document, this._focusTrapManager,\n        this._inertStrategy, configObject);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n// The tokens for the live announcer are defined in a separate file from LiveAnnouncer\n// as a workaround for https://github.com/angular/angular/issues/22559\n\n/** Possible politeness levels. */\nexport type AriaLivePoliteness = 'off' | 'polite' | 'assertive';\n\nexport const LIVE_ANNOUNCER_ELEMENT_TOKEN =\n    new InjectionToken<HTMLElement | null>('liveAnnouncerElement', {\n      providedIn: 'root',\n      factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n    });\n\n/** @docs-private */\nexport function LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY(): null {\n  return null;\n}\n\n/** Object that can be used to configure the default options for the LiveAnnouncer. */\nexport interface LiveAnnouncerDefaultOptions {\n  /** Default politeness for the announcements. */\n  politeness?: AriaLivePoliteness;\n\n  /** Default duration for the announcement messages. */\n  duration?: number;\n}\n\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nexport const LIVE_ANNOUNCER_DEFAULT_OPTIONS =\n    new InjectionToken<LiveAnnouncerDefaultOptions>('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ContentObserver} from '@angular/cdk/observers';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  Directive,\n  ElementRef,\n  Inject,\n  Injectable,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {\n  AriaLivePoliteness,\n  LiveAnnouncerDefaultOptions,\n  LIVE_ANNOUNCER_ELEMENT_TOKEN,\n  LIVE_ANNOUNCER_DEFAULT_OPTIONS,\n} from './live-announcer-tokens';\n\n\n@Injectable({providedIn: 'root'})\nexport class LiveAnnouncer implements OnDestroy {\n  private _liveElement: HTMLElement;\n  private _document: Document;\n  private _previousTimeout?: number;\n\n  constructor(\n      @Optional() @Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN) elementToken: any,\n      private _ngZone: NgZone,\n      @Inject(DOCUMENT) _document: any,\n      @Optional() @Inject(LIVE_ANNOUNCER_DEFAULT_OPTIONS)\n      private _defaultOptions?: LiveAnnouncerDefaultOptions) {\n\n    // We inject the live element and document as `any` because the constructor signature cannot\n    // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n    // a class decorator causes TypeScript to preserve the constructor signature types.\n    this._document = _document;\n    this._liveElement = elementToken || this._createLiveElement();\n  }\n\n  /**\n   * Announces a message to screenreaders.\n   * @param message Message to be announced to the screenreader.\n   * @returns Promise that will be resolved when the message is added to the DOM.\n   */\n  announce(message: string): Promise<void>;\n\n  /**\n   * Announces a message to screenreaders.\n   * @param message Message to be announced to the screenreader.\n   * @param politeness The politeness of the announcer element.\n   * @returns Promise that will be resolved when the message is added to the DOM.\n   */\n  announce(message: string, politeness?: AriaLivePoliteness): Promise<void>;\n\n  /**\n   * Announces a message to screenreaders.\n   * @param message Message to be announced to the screenreader.\n   * @param duration Time in milliseconds after which to clear out the announcer element. Note\n   *   that this takes effect after the message has been added to the DOM, which can be up to\n   *   100ms after `announce` has been called.\n   * @returns Promise that will be resolved when the message is added to the DOM.\n   */\n  announce(message: string, duration?: number): Promise<void>;\n\n  /**\n   * Announces a message to screenreaders.\n   * @param message Message to be announced to the screenreader.\n   * @param politeness The politeness of the announcer element.\n   * @param duration Time in milliseconds after which to clear out the announcer element. Note\n   *   that this takes effect after the message has been added to the DOM, which can be up to\n   *   100ms after `announce` has been called.\n   * @returns Promise that will be resolved when the message is added to the DOM.\n   */\n  announce(message: string, politeness?: AriaLivePoliteness, duration?: number): Promise<void>;\n\n  announce(message: string, ...args: any[]): Promise<void> {\n    const defaultOptions = this._defaultOptions;\n    let politeness: AriaLivePoliteness | undefined;\n    let duration: number | undefined;\n\n    if (args.length === 1 && typeof args[0] === 'number') {\n      duration = args[0];\n    } else {\n      [politeness, duration] = args;\n    }\n\n    this.clear();\n    clearTimeout(this._previousTimeout);\n\n    if (!politeness) {\n      politeness =\n          (defaultOptions && defaultOptions.politeness) ? defaultOptions.politeness : 'polite';\n    }\n\n    if (duration == null && defaultOptions) {\n      duration = defaultOptions.duration;\n    }\n\n    // TODO: ensure changing the politeness works on all environments we support.\n    this._liveElement.setAttribute('aria-live', politeness);\n\n    // This 100ms timeout is necessary for some browser + screen-reader combinations:\n    // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n    // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n    //   second time without clearing and then using a non-zero delay.\n    // (using JAWS 17 at time of this writing).\n    return this._ngZone.runOutsideAngular(() => {\n      return new Promise(resolve => {\n        clearTimeout(this._previousTimeout);\n        this._previousTimeout = setTimeout(() => {\n          this._liveElement.textContent = message;\n          resolve();\n\n          if (typeof duration === 'number') {\n            this._previousTimeout = setTimeout(() => this.clear(), duration);\n          }\n        }, 100);\n      });\n    });\n  }\n\n  /**\n   * Clears the current text from the announcer element. Can be used to prevent\n   * screen readers from reading the text out again while the user is going\n   * through the page landmarks.\n   */\n  clear() {\n    if (this._liveElement) {\n      this._liveElement.textContent = '';\n    }\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this._previousTimeout);\n\n    if (this._liveElement && this._liveElement.parentNode) {\n      this._liveElement.parentNode.removeChild(this._liveElement);\n      this._liveElement = null!;\n    }\n  }\n\n  private _createLiveElement(): HTMLElement {\n    const elementClass = 'cdk-live-announcer-element';\n    const previousElements = this._document.getElementsByClassName(elementClass);\n    const liveEl = this._document.createElement('div');\n\n    // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n    for (let i = 0; i < previousElements.length; i++) {\n      previousElements[i].parentNode!.removeChild(previousElements[i]);\n    }\n\n    liveEl.classList.add(elementClass);\n    liveEl.classList.add('cdk-visually-hidden');\n\n    liveEl.setAttribute('aria-atomic', 'true');\n    liveEl.setAttribute('aria-live', 'polite');\n\n    this._document.body.appendChild(liveEl);\n\n    return liveEl;\n  }\n\n}\n\n\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\n@Directive({\n  selector: '[cdkAriaLive]',\n  exportAs: 'cdkAriaLive',\n})\nexport class CdkAriaLive implements OnDestroy {\n  /** The aria-live politeness level to use when announcing messages. */\n  @Input('cdkAriaLive')\n  get politeness(): AriaLivePoliteness { return this._politeness; }\n  set politeness(value: AriaLivePoliteness) {\n    this._politeness = value === 'polite' || value === 'assertive' ? value : 'off';\n    if (this._politeness === 'off') {\n      if (this._subscription) {\n        this._subscription.unsubscribe();\n        this._subscription = null;\n      }\n    } else if (!this._subscription) {\n      this._subscription = this._ngZone.runOutsideAngular(() => {\n        return this._contentObserver\n          .observe(this._elementRef)\n          .subscribe(() => {\n            // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n            const elementText = this._elementRef.nativeElement.textContent;\n\n            // The `MutationObserver` fires also for attribute\n            // changes which we don't want to announce.\n            if (elementText !== this._previousAnnouncedText) {\n              this._liveAnnouncer.announce(elementText, this._politeness);\n              this._previousAnnouncedText = elementText;\n            }\n          });\n      });\n    }\n  }\n  private _politeness: AriaLivePoliteness = 'off';\n\n  private _previousAnnouncedText?: string;\n  private _subscription: Subscription | null;\n\n  constructor(private _elementRef: ElementRef, private _liveAnnouncer: LiveAnnouncer,\n              private _contentObserver: ContentObserver, private _ngZone: NgZone) {}\n\n  ngOnDestroy() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Screenreaders will often fire fake mousedown events when a focusable element\n * is activated using the keyboard. We can typically distinguish between these faked\n * mousedown events and real mousedown events using the \"buttons\" property. While\n * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\n * the left mouse button), faked mousedowns will usually set the property value to 0.\n */\nexport function isFakeMousedownFromScreenReader(event: MouseEvent): boolean {\n  return event.buttons === 0;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform, normalizePassiveListenerOptions, _getShadowRoot} from '@angular/cdk/platform';\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Injectable,\n  InjectionToken,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n} from '@angular/core';\nimport {Observable, of as observableOf, Subject, Subscription} from 'rxjs';\nimport {coerceElement} from '@angular/cdk/coercion';\nimport {DOCUMENT} from '@angular/common';\nimport {isFakeMousedownFromScreenReader} from '../fake-mousedown';\n\n\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\nexport const TOUCH_BUFFER_MS = 650;\n\n\nexport type FocusOrigin = 'touch' | 'mouse' | 'keyboard' | 'program' | null;\n\n/**\n * Corresponds to the options that can be passed to the native `focus` event.\n * via https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus\n */\nexport interface FocusOptions {\n  /** Whether the browser should scroll to the element when it is focused. */\n  preventScroll?: boolean;\n}\n\n/** Detection mode used for attributing the origin of a focus event. */\nexport const enum FocusMonitorDetectionMode {\n  /**\n   * Any mousedown, keydown, or touchstart event that happened in the previous\n   * tick or the current tick will be used to assign a focus event's origin (to\n   * either mouse, keyboard, or touch). This is the default option.\n   */\n  IMMEDIATE,\n  /**\n   * A focus event's origin is always attributed to the last corresponding\n   * mousedown, keydown, or touchstart event, no matter how long ago it occured.\n   */\n  EVENTUAL\n}\n\n/** Injectable service-level options for FocusMonitor. */\nexport interface FocusMonitorOptions {\n  detectionMode?: FocusMonitorDetectionMode;\n}\n\n/** InjectionToken for FocusMonitorOptions. */\nexport const FOCUS_MONITOR_DEFAULT_OPTIONS =\n    new InjectionToken<FocusMonitorOptions>('cdk-focus-monitor-default-options');\n\ntype MonitoredElementInfo = {\n  checkChildren: boolean,\n  subject: Subject<FocusOrigin>,\n  rootNode: HTMLElement|Document\n};\n\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n\n\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\n@Injectable({providedIn: 'root'})\nexport class FocusMonitor implements OnDestroy {\n  /** The focus origin that the next focus event is a result of. */\n  private _origin: FocusOrigin = null;\n\n  /** The FocusOrigin of the last focus event tracked by the FocusMonitor. */\n  private _lastFocusOrigin: FocusOrigin;\n\n  /** Whether the window has just been focused. */\n  private _windowFocused = false;\n\n  /** The target of the last touch event. */\n  private _lastTouchTarget: EventTarget | null;\n\n  /** The timeout id of the touch timeout, used to cancel timeout later. */\n  private _touchTimeoutId: number;\n\n  /** The timeout id of the window focus timeout. */\n  private _windowFocusTimeoutId: number;\n\n  /** The timeout id of the origin clearing timeout. */\n  private _originTimeoutId: number;\n\n  /** Map of elements being monitored to their info. */\n  private _elementInfo = new Map<HTMLElement, MonitoredElementInfo>();\n\n  /** The number of elements currently being monitored. */\n  private _monitoredElementCount = 0;\n\n  /**\n   * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n   * as well as the number of monitored elements that they contain. We have to treat focus/blur\n   * handlers differently from the rest of the events, because the browser won't emit events\n   * to the document when focus moves inside of a shadow root.\n   */\n  private _rootNodeFocusListenerCount = new Map<HTMLElement|Document, number>();\n\n  /**\n   * The specified detection mode, used for attributing the origin of a focus\n   * event.\n   */\n  private readonly _detectionMode: FocusMonitorDetectionMode;\n\n  /**\n   * Event listener for `keydown` events on the document.\n   * Needs to be an arrow function in order to preserve the context when it gets bound.\n   */\n  private _documentKeydownListener = () => {\n    // On keydown record the origin and clear any touch event that may be in progress.\n    this._lastTouchTarget = null;\n    this._setOriginForCurrentEventQueue('keyboard');\n  }\n\n  /**\n   * Event listener for `mousedown` events on the document.\n   * Needs to be an arrow function in order to preserve the context when it gets bound.\n   */\n  private _documentMousedownListener = (event: MouseEvent) => {\n    // On mousedown record the origin only if there is not touch\n    // target, since a mousedown can happen as a result of a touch event.\n    if (!this._lastTouchTarget) {\n      // In some cases screen readers fire fake `mousedown` events instead of `keydown`.\n      // Resolve the focus source to `keyboard` if we detect one of them.\n      const source = isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse';\n      this._setOriginForCurrentEventQueue(source);\n    }\n  }\n\n  /**\n   * Event listener for `touchstart` events on the document.\n   * Needs to be an arrow function in order to preserve the context when it gets bound.\n   */\n  private _documentTouchstartListener = (event: TouchEvent) => {\n    // When the touchstart event fires the focus event is not yet in the event queue. This means\n    // we can't rely on the trick used above (setting timeout of 1ms). Instead we wait 650ms to\n    // see if a focus happens.\n    if (this._touchTimeoutId != null) {\n      clearTimeout(this._touchTimeoutId);\n    }\n\n    this._lastTouchTarget = getTarget(event);\n    this._touchTimeoutId = setTimeout(() => this._lastTouchTarget = null, TOUCH_BUFFER_MS);\n  }\n\n  /**\n   * Event listener for `focus` events on the window.\n   * Needs to be an arrow function in order to preserve the context when it gets bound.\n   */\n  private _windowFocusListener = () => {\n    // Make a note of when the window regains focus, so we can\n    // restore the origin info for the focused element.\n    this._windowFocused = true;\n    this._windowFocusTimeoutId = setTimeout(() => this._windowFocused = false);\n  }\n\n  /** Used to reference correct document/window */\n  protected _document?: Document;\n\n  constructor(\n      private _ngZone: NgZone,\n      private _platform: Platform,\n      /** @breaking-change 11.0.0 make document required */\n      @Optional() @Inject(DOCUMENT) document: any|null,\n      @Optional() @Inject(FOCUS_MONITOR_DEFAULT_OPTIONS) options:\n          FocusMonitorOptions|null) {\n    this._document = document;\n    this._detectionMode = options?.detectionMode || FocusMonitorDetectionMode.IMMEDIATE;\n  }\n  /**\n   * Event listener for `focus` and 'blur' events on the document.\n   * Needs to be an arrow function in order to preserve the context when it gets bound.\n   */\n  private _rootNodeFocusAndBlurListener = (event: Event) => {\n    const target = getTarget(event);\n    const handler = event.type === 'focus' ? this._onFocus : this._onBlur;\n\n    // We need to walk up the ancestor chain in order to support `checkChildren`.\n    for (let element = target; element; element = element.parentElement) {\n      handler.call(this, event as FocusEvent, element);\n    }\n  }\n\n  /**\n   * Monitors focus on an element and applies appropriate CSS classes.\n   * @param element The element to monitor\n   * @param checkChildren Whether to count the element as focused when its children are focused.\n   * @returns An observable that emits when the focus state of the element changes.\n   *     When the element is blurred, null will be emitted.\n   */\n  monitor(element: HTMLElement, checkChildren?: boolean): Observable<FocusOrigin>;\n\n  /**\n   * Monitors focus on an element and applies appropriate CSS classes.\n   * @param element The element to monitor\n   * @param checkChildren Whether to count the element as focused when its children are focused.\n   * @returns An observable that emits when the focus state of the element changes.\n   *     When the element is blurred, null will be emitted.\n   */\n  monitor(element: ElementRef<HTMLElement>, checkChildren?: boolean): Observable<FocusOrigin>;\n\n  monitor(element: HTMLElement | ElementRef<HTMLElement>,\n          checkChildren: boolean = false): Observable<FocusOrigin> {\n    // Do nothing if we're not on the browser platform.\n    if (!this._platform.isBrowser) {\n      return observableOf(null);\n    }\n\n    const nativeElement = coerceElement(element);\n\n    // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n    // the shadow root, rather than the `document`, because the browser won't emit focus events\n    // to the `document`, if focus is moving within the same shadow root.\n    const rootNode = (_getShadowRoot(nativeElement) as HTMLElement|null) || this._getDocument();\n    const cachedInfo = this._elementInfo.get(nativeElement);\n\n    // Check if we're already monitoring this element.\n    if (cachedInfo) {\n      if (checkChildren) {\n        // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n        // observers into ones that behave as if `checkChildren` was turned on. We need a more\n        // robust solution.\n        cachedInfo.checkChildren = true;\n      }\n\n      return cachedInfo.subject.asObservable();\n    }\n\n    // Create monitored element info.\n    const info: MonitoredElementInfo = {\n      checkChildren: checkChildren,\n      subject: new Subject<FocusOrigin>(),\n      rootNode\n    };\n    this._elementInfo.set(nativeElement, info);\n    this._registerGlobalListeners(info);\n\n    return info.subject.asObservable();\n  }\n\n  /**\n   * Stops monitoring an element and removes all focus classes.\n   * @param element The element to stop monitoring.\n   */\n  stopMonitoring(element: HTMLElement): void;\n\n  /**\n   * Stops monitoring an element and removes all focus classes.\n   * @param element The element to stop monitoring.\n   */\n  stopMonitoring(element: ElementRef<HTMLElement>): void;\n\n  stopMonitoring(element: HTMLElement | ElementRef<HTMLElement>): void {\n    const nativeElement = coerceElement(element);\n    const elementInfo = this._elementInfo.get(nativeElement);\n\n    if (elementInfo) {\n      elementInfo.subject.complete();\n\n      this._setClasses(nativeElement);\n      this._elementInfo.delete(nativeElement);\n      this._removeGlobalListeners(elementInfo);\n    }\n  }\n\n  /**\n   * Focuses the element via the specified focus origin.\n   * @param element Element to focus.\n   * @param origin Focus origin.\n   * @param options Options that can be used to configure the focus behavior.\n   */\n  focusVia(element: HTMLElement, origin: FocusOrigin, options?: FocusOptions): void;\n\n  /**\n   * Focuses the element via the specified focus origin.\n   * @param element Element to focus.\n   * @param origin Focus origin.\n   * @param options Options that can be used to configure the focus behavior.\n   */\n  focusVia(element: ElementRef<HTMLElement>, origin: FocusOrigin, options?: FocusOptions): void;\n\n  focusVia(element: HTMLElement | ElementRef<HTMLElement>,\n          origin: FocusOrigin,\n          options?: FocusOptions): void {\n\n    const nativeElement = coerceElement(element);\n\n    this._setOriginForCurrentEventQueue(origin);\n\n    // `focus` isn't available on the server\n    if (typeof nativeElement.focus === 'function') {\n      // Cast the element to `any`, because the TS typings don't have the `options` parameter yet.\n      (nativeElement as any).focus(options);\n    }\n  }\n\n  ngOnDestroy() {\n    this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n  }\n\n  /** Access injected document if available or fallback to global document reference */\n  private _getDocument(): Document {\n    return this._document || document;\n  }\n\n  /** Use defaultView of injected document if available or fallback to global window reference */\n  private _getWindow(): Window {\n    const doc = this._getDocument();\n    return doc.defaultView || window;\n  }\n\n  private _toggleClass(element: Element, className: string, shouldSet: boolean) {\n    if (shouldSet) {\n      element.classList.add(className);\n    } else {\n      element.classList.remove(className);\n    }\n  }\n\n  private _getFocusOrigin(event: FocusEvent): FocusOrigin {\n    // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n    // 1) The window has just regained focus, in which case we want to restore the focused state of\n    //    the element from before the window blurred.\n    // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n    // 3) The element was programmatically focused, in which case we should mark the origin as\n    //    'program'.\n    if (this._origin) {\n      return this._origin;\n    }\n\n    if (this._windowFocused && this._lastFocusOrigin) {\n      return this._lastFocusOrigin;\n    } else if (this._wasCausedByTouch(event)) {\n      return 'touch';\n    } else {\n      return 'program';\n    }\n  }\n\n  /**\n   * Sets the focus classes on the element based on the given focus origin.\n   * @param element The element to update the classes on.\n   * @param origin The focus origin.\n   */\n  private _setClasses(element: HTMLElement, origin?: FocusOrigin): void {\n    this._toggleClass(element, 'cdk-focused', !!origin);\n    this._toggleClass(element, 'cdk-touch-focused', origin === 'touch');\n    this._toggleClass(element, 'cdk-keyboard-focused', origin === 'keyboard');\n    this._toggleClass(element, 'cdk-mouse-focused', origin === 'mouse');\n    this._toggleClass(element, 'cdk-program-focused', origin === 'program');\n  }\n\n  /**\n   * Sets the origin and schedules an async function to clear it at the end of the event queue.\n   * If the detection mode is 'eventual', the origin is never cleared.\n   * @param origin The origin to set.\n   */\n  private _setOriginForCurrentEventQueue(origin: FocusOrigin): void {\n    this._ngZone.runOutsideAngular(() => {\n      this._origin = origin;\n\n      if (this._detectionMode === FocusMonitorDetectionMode.IMMEDIATE) {\n        // Sometimes the focus origin won't be valid in Firefox because Firefox seems to focus *one*\n        // tick after the interaction event fired. To ensure the focus origin is always correct,\n        // the focus origin will be determined at the beginning of the next tick.\n        this._originTimeoutId = setTimeout(() => this._origin = null, 1);\n      }\n    });\n  }\n\n  /**\n   * Checks whether the given focus event was caused by a touchstart event.\n   * @param event The focus event to check.\n   * @returns Whether the event was caused by a touch.\n   */\n  private _wasCausedByTouch(event: FocusEvent): boolean {\n    // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n    // Consider the following dom structure:\n    //\n    // <div #parent tabindex=\"0\" cdkFocusClasses>\n    //   <div #child (click)=\"#parent.focus()\"></div>\n    // </div>\n    //\n    // If the user touches the #child element and the #parent is programmatically focused as a\n    // result, this code will still consider it to have been caused by the touch event and will\n    // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n    // relatively small edge-case that can be worked around by using\n    // focusVia(parentEl, 'program') to focus the parent element.\n    //\n    // If we decide that we absolutely must handle this case correctly, we can do so by listening\n    // for the first focus event after the touchstart, and then the first blur event after that\n    // focus event. When that blur event fires we know that whatever follows is not a result of the\n    // touchstart.\n    const focusTarget = getTarget(event);\n    return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n        (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n  }\n\n  /**\n   * Handles focus events on a registered element.\n   * @param event The focus event.\n   * @param element The monitored element.\n   */\n  private _onFocus(event: FocusEvent, element: HTMLElement) {\n    // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n    // focus event affecting the monitored element. If we want to use the origin of the first event\n    // instead we should check for the cdk-focused class here and return if the element already has\n    // it. (This only matters for elements that have includesChildren = true).\n\n    // If we are not counting child-element-focus as focused, make sure that the event target is the\n    // monitored element itself.\n    const elementInfo = this._elementInfo.get(element);\n    if (!elementInfo || (!elementInfo.checkChildren && element !== getTarget(event))) {\n      return;\n    }\n\n    const origin = this._getFocusOrigin(event);\n    this._setClasses(element, origin);\n    this._emitOrigin(elementInfo.subject, origin);\n    this._lastFocusOrigin = origin;\n  }\n\n  /**\n   * Handles blur events on a registered element.\n   * @param event The blur event.\n   * @param element The monitored element.\n   */\n  _onBlur(event: FocusEvent, element: HTMLElement) {\n    // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n    // order to focus another child of the monitored element.\n    const elementInfo = this._elementInfo.get(element);\n\n    if (!elementInfo || (elementInfo.checkChildren && event.relatedTarget instanceof Node &&\n        element.contains(event.relatedTarget))) {\n      return;\n    }\n\n    this._setClasses(element);\n    this._emitOrigin(elementInfo.subject, null);\n  }\n\n  private _emitOrigin(subject: Subject<FocusOrigin>, origin: FocusOrigin) {\n    this._ngZone.run(() => subject.next(origin));\n  }\n\n  private _registerGlobalListeners(elementInfo: MonitoredElementInfo) {\n    if (!this._platform.isBrowser) {\n      return;\n    }\n\n    const rootNode = elementInfo.rootNode;\n    const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n\n    if (!rootNodeFocusListeners) {\n      this._ngZone.runOutsideAngular(() => {\n        rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener,\n          captureEventListenerOptions);\n        rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener,\n          captureEventListenerOptions);\n      });\n    }\n\n    this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n\n    // Register global listeners when first element is monitored.\n    if (++this._monitoredElementCount === 1) {\n      // Note: we listen to events in the capture phase so we\n      // can detect them even if the user stops propagation.\n      this._ngZone.runOutsideAngular(() => {\n        const document = this._getDocument();\n        const window = this._getWindow();\n\n        document.addEventListener('keydown', this._documentKeydownListener,\n          captureEventListenerOptions);\n        document.addEventListener('mousedown', this._documentMousedownListener,\n          captureEventListenerOptions);\n        document.addEventListener('touchstart', this._documentTouchstartListener,\n          captureEventListenerOptions);\n        window.addEventListener('focus', this._windowFocusListener);\n      });\n    }\n  }\n\n  private _removeGlobalListeners(elementInfo: MonitoredElementInfo) {\n    const rootNode = elementInfo.rootNode;\n\n    if (this._rootNodeFocusListenerCount.has(rootNode)) {\n      const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode)!;\n\n      if (rootNodeFocusListeners > 1) {\n        this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n      } else {\n        rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener,\n          captureEventListenerOptions);\n        rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener,\n          captureEventListenerOptions);\n        this._rootNodeFocusListenerCount.delete(rootNode);\n      }\n    }\n\n    // Unregister global listeners when last element is unmonitored.\n    if (!--this._monitoredElementCount) {\n      const document = this._getDocument();\n      const window = this._getWindow();\n\n      document.removeEventListener('keydown', this._documentKeydownListener,\n        captureEventListenerOptions);\n      document.removeEventListener('mousedown', this._documentMousedownListener,\n        captureEventListenerOptions);\n      document.removeEventListener('touchstart', this._documentTouchstartListener,\n        captureEventListenerOptions);\n      window.removeEventListener('focus', this._windowFocusListener);\n\n      // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n      clearTimeout(this._windowFocusTimeoutId);\n      clearTimeout(this._touchTimeoutId);\n      clearTimeout(this._originTimeoutId);\n    }\n  }\n}\n\n/** Gets the target of an event, accounting for Shadow DOM. */\nfunction getTarget(event: Event): HTMLElement|null {\n  // If an event is bound outside the Shadow DOM, the `event.target` will\n  // point to the shadow root so we have to use `composedPath` instead.\n  return (event.composedPath ? event.composedPath()[0] : event.target) as HTMLElement | null;\n}\n\n\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\n@Directive({\n  selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n})\nexport class CdkMonitorFocus implements OnDestroy {\n  private _monitorSubscription: Subscription;\n  @Output() cdkFocusChange = new EventEmitter<FocusOrigin>();\n\n  constructor(private _elementRef: ElementRef<HTMLElement>, private _focusMonitor: FocusMonitor) {\n    this._monitorSubscription = this._focusMonitor.monitor(\n        this._elementRef,\n        this._elementRef.nativeElement.hasAttribute('cdkMonitorSubtreeFocus'))\n        .subscribe(origin => this.cdkFocusChange.emit(origin));\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._monitorSubscription.unsubscribe();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\n\n\n/** Set of possible high-contrast mode backgrounds. */\nexport const enum HighContrastMode {\n  NONE,\n  BLACK_ON_WHITE,\n  WHITE_ON_BLACK,\n}\n\n/** CSS class applied to the document body when in black-on-white high-contrast mode. */\nexport const BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n\n/** CSS class applied to the document body when in white-on-black high-contrast mode. */\nexport const WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n\n/** CSS class applied to the document body when in high-contrast mode. */\nexport const HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\n@Injectable({providedIn: 'root'})\nexport class HighContrastModeDetector {\n  private _document: Document;\n\n  constructor(private _platform: Platform, @Inject(DOCUMENT) document: any) {\n    this._document = document;\n  }\n\n  /** Gets the current high-contrast-mode for the page. */\n  getHighContrastMode(): HighContrastMode {\n    if (!this._platform.isBrowser) {\n      return HighContrastMode.NONE;\n    }\n\n    // Create a test element with an arbitrary background-color that is neither black nor\n    // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n    // appending the test element to the DOM does not affect layout by absolutely positioning it\n    const testElement = this._document.createElement('div');\n    testElement.style.backgroundColor = 'rgb(1,2,3)';\n    testElement.style.position = 'absolute';\n    this._document.body.appendChild(testElement);\n\n    // Get the computed style for the background color, collapsing spaces to normalize between\n    // browsers. Once we get this color, we no longer need the test element. Access the `window`\n    // via the document so we can fake it in tests. Note that we have extra null checks, because\n    // this logic will likely run during app bootstrap and throwing can break the entire app.\n    const documentWindow = this._document.defaultView || window;\n    const computedStyle = (documentWindow && documentWindow.getComputedStyle) ?\n        documentWindow.getComputedStyle(testElement) : null;\n    const computedColor =\n        (computedStyle && computedStyle.backgroundColor || '').replace(/ /g, '');\n    this._document.body.removeChild(testElement);\n\n    switch (computedColor) {\n      case 'rgb(0,0,0)': return HighContrastMode.WHITE_ON_BLACK;\n      case 'rgb(255,255,255)': return HighContrastMode.BLACK_ON_WHITE;\n    }\n    return HighContrastMode.NONE;\n  }\n\n  /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */\n  _applyBodyHighContrastModeCssClasses(): void {\n    if (this._platform.isBrowser && this._document.body) {\n      const bodyClasses = this._document.body.classList;\n      // IE11 doesn't support `classList` operations with multiple arguments\n      bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n      bodyClasses.remove(BLACK_ON_WHITE_CSS_CLASS);\n      bodyClasses.remove(WHITE_ON_BLACK_CSS_CLASS);\n\n      const mode = this.getHighContrastMode();\n      if (mode === HighContrastMode.BLACK_ON_WHITE) {\n        bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n        bodyClasses.add(BLACK_ON_WHITE_CSS_CLASS);\n      } else if (mode === HighContrastMode.WHITE_ON_BLACK) {\n        bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n        bodyClasses.add(WHITE_ON_BLACK_CSS_CLASS);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {NgModule} from '@angular/core';\nimport {CdkMonitorFocus} from './focus-monitor/focus-monitor';\nimport {CdkTrapFocus} from './focus-trap/focus-trap';\nimport {HighContrastModeDetector} from './high-contrast-mode/high-contrast-mode-detector';\nimport {CdkAriaLive} from './live-announcer/live-announcer';\n\n\n@NgModule({\n  imports: [PlatformModule, ObserversModule],\n  declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n  exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n})\nexport class A11yModule {\n  constructor(highContrastModeDetector: HighContrastModeDetector) {\n    highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {ConfigurableFocusTrapConfig as Éµangular_material_src_cdk_a11y_a11y_b} from './focus-trap/configurable-focus-trap-config';\nexport {FocusTrapManager as Éµangular_material_src_cdk_a11y_a11y_a} from './focus-trap/focus-trap-manager';"]}